{"ast":null,"code":"var _jsxFileName = \"A:\\\\Personal_Projects\\\\React_MVC\\\\Code\\\\frontend\\\\src\\\\components\\\\companies\\\\CompaniesGrid.tsx\";\nimport { Box } from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid';\nimport moment from 'moment';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst column = [{\n  field: 'id',\n  headerName: 'ID',\n  width: 100\n}, {\n  field: 'name',\n  headerName: 'Name',\n  width: 200\n}, {\n  field: 'companySize',\n  headerName: 'Company Size',\n  width: 150\n}, {\n  field: 'createdDate',\n  headerName: 'Creation time',\n  width: 200,\n  renderCell: params => moment(params.row.createdDate).format('YYYY-MM-DD')\n}];\nconst CompaniesGrid = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      height: '100vh'\n    },\n    className: \"companies-grid\",\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: data,\n      columns: column,\n      getRowId: row => row.id,\n      rowHeight: 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_c = CompaniesGrid;\nexport default CompaniesGrid;\nvar _c;\n$RefreshReg$(_c, \"CompaniesGrid\");","map":{"version":3,"names":["Box","DataGrid","moment","React","jsxDEV","_jsxDEV","column","field","headerName","width","renderCell","params","row","createdDate","format","CompaniesGrid","data","sx","height","className","children","rows","columns","getRowId","id","rowHeight","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["A:/Personal_Projects/React_MVC/Code/frontend/src/components/companies/CompaniesGrid.tsx"],"sourcesContent":["import { Box } from '@mui/material';\r\nimport { DataGrid, GridColDef } from '@mui/x-data-grid';\r\nimport moment from 'moment';\r\nimport React from 'react';\r\nimport { ICompany } from '../../types/global.typing';\r\n\r\nconst column: GridColDef[] = [\r\n    {\r\n        field: 'id',\r\n        headerName: 'ID',\r\n        width: 100,\r\n    },\r\n    {\r\n        field: 'name',\r\n        headerName: 'Name',\r\n        width: 200,\r\n    },\r\n    {\r\n        field: 'companySize',\r\n        headerName: 'Company Size',\r\n        width: 150,\r\n    },\r\n    {\r\n        field: 'createdDate',\r\n        headerName: 'Creation time',\r\n        width: 200,\r\n        renderCell: params =>\r\n            moment(params.row.createdDate).format('YYYY-MM-DD'),\r\n    },\r\n];\r\n\r\ninterface ICompaniesGridProps {\r\n    data: ICompany[];\r\n}\r\n\r\nconst CompaniesGrid = ({ data }: ICompaniesGridProps) => {\r\n    return (\r\n        <Box sx={{ width: '100%', height: '100vh' }} className='companies-grid'>\r\n            <DataGrid\r\n                rows={data}\r\n                columns={column}\r\n                getRowId={row => row.id}\r\n                rowHeight={50}\r\n            />\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default CompaniesGrid;\r\n"],"mappings":";AAAA,SAASA,GAAG,QAAQ,eAAe;AACnC,SAASC,QAAQ,QAAoB,kBAAkB;AACvD,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,MAAMC,MAAoB,GAAG,CACzB;EACIC,KAAK,EAAE,IAAI;EACXC,UAAU,EAAE,IAAI;EAChBC,KAAK,EAAE;AACX,CAAC,EACD;EACIF,KAAK,EAAE,MAAM;EACbC,UAAU,EAAE,MAAM;EAClBC,KAAK,EAAE;AACX,CAAC,EACD;EACIF,KAAK,EAAE,aAAa;EACpBC,UAAU,EAAE,cAAc;EAC1BC,KAAK,EAAE;AACX,CAAC,EACD;EACIF,KAAK,EAAE,aAAa;EACpBC,UAAU,EAAE,eAAe;EAC3BC,KAAK,EAAE,GAAG;EACVC,UAAU,EAAEC,MAAM,IACdT,MAAM,CAACS,MAAM,CAACC,GAAG,CAACC,WAAW,CAAC,CAACC,MAAM,CAAC,YAAY;AAC1D,CAAC,CACJ;AAMD,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAA0B,CAAC,KAAK;EACrD,oBACIX,OAAA,CAACL,GAAG;IAACiB,EAAE,EAAE;MAAER,KAAK,EAAE,MAAM;MAAES,MAAM,EAAE;IAAQ,CAAE;IAACC,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eACnEf,OAAA,CAACJ,QAAQ;MACLoB,IAAI,EAAEL,IAAK;MACXM,OAAO,EAAEhB,MAAO;MAChBiB,QAAQ,EAAEX,GAAG,IAAIA,GAAG,CAACY,EAAG;MACxBC,SAAS,EAAE;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACC,EAAA,GAXIf,aAAa;AAanB,eAAeA,aAAa;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}