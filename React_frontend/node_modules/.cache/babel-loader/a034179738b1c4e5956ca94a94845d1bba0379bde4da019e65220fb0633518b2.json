{"ast":null,"code":"var _jsxFileName = \"A:\\\\Personal_Projects\\\\React_MVC\\\\Code\\\\frontend\\\\src\\\\components\\\\jobs\\\\JobsGrid.tsx\";\nimport { Box } from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid';\nimport moment from 'moment';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst column = [{\n  field: 'id',\n  headerName: 'Id',\n  width: 100\n}, {\n  field: 'title',\n  headerName: 'Title',\n  width: 500\n}, {\n  field: 'jobLevel',\n  headerName: 'Job Level',\n  width: 150\n}, {\n  field: 'companyName',\n  headerName: 'Company Name',\n  width: 400\n}, {\n  field: 'createdDate',\n  headerName: 'Creation time',\n  width: 200,\n  renderCell: params => moment(params.row.createdDate).fromNow()\n}];\nconst JobsGrid = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      height: 450\n    },\n    className: \"jobs-grid\",\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: data,\n      columns: column,\n      getRowId: row => row.id,\n      rowHeight: 50,\n      initialState: {\n        pagination: {\n          paginationModel: {\n            pageSize: 25\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_c = JobsGrid;\nexport default JobsGrid;\nvar _c;\n$RefreshReg$(_c, \"JobsGrid\");","map":{"version":3,"names":["Box","DataGrid","moment","React","jsxDEV","_jsxDEV","column","field","headerName","width","renderCell","params","row","createdDate","fromNow","JobsGrid","data","sx","height","className","children","rows","columns","getRowId","id","rowHeight","initialState","pagination","paginationModel","pageSize","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["A:/Personal_Projects/React_MVC/Code/frontend/src/components/jobs/JobsGrid.tsx"],"sourcesContent":["import { Box } from '@mui/material';\r\nimport { DataGrid, GridColDef } from '@mui/x-data-grid';\r\nimport moment from 'moment';\r\nimport React from 'react';\r\nimport { IJob } from '../../types/global.typing';\r\n\r\nconst column: GridColDef[] = [\r\n    {\r\n        field: 'id',\r\n        headerName: 'Id',\r\n        width: 100,\r\n    },\r\n    {\r\n        field: 'title',\r\n        headerName: 'Title',\r\n        width: 500,\r\n    },\r\n    {\r\n        field: 'jobLevel',\r\n        headerName: 'Job Level',\r\n        width: 150,\r\n    },\r\n    {\r\n        field: 'companyName',\r\n        headerName: 'Company Name',\r\n        width: 400,\r\n    },\r\n    {\r\n        field: 'createdDate',\r\n        headerName: 'Creation time',\r\n        width: 200,\r\n        renderCell: params => moment(params.row.createdDate).fromNow(),\r\n    },\r\n];\r\n\r\ninterface IJobsGridProps {\r\n    data: IJob[];\r\n}\r\n\r\nconst JobsGrid = ({ data }: IJobsGridProps) => {\r\n    return (\r\n        <Box sx={{ width: '100%', height: 450 }} className='jobs-grid'>\r\n            <DataGrid\r\n                rows={data}\r\n                columns={column}\r\n                getRowId={row => row.id}\r\n                rowHeight={50}\r\n                initialState={{\r\n                    pagination: {\r\n                        paginationModel: {\r\n                            pageSize: 25,\r\n                        },\r\n                    },\r\n                }}\r\n            />\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default JobsGrid;\r\n"],"mappings":";AAAA,SAASA,GAAG,QAAQ,eAAe;AACnC,SAASC,QAAQ,QAAoB,kBAAkB;AACvD,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,MAAMC,MAAoB,GAAG,CACzB;EACIC,KAAK,EAAE,IAAI;EACXC,UAAU,EAAE,IAAI;EAChBC,KAAK,EAAE;AACX,CAAC,EACD;EACIF,KAAK,EAAE,OAAO;EACdC,UAAU,EAAE,OAAO;EACnBC,KAAK,EAAE;AACX,CAAC,EACD;EACIF,KAAK,EAAE,UAAU;EACjBC,UAAU,EAAE,WAAW;EACvBC,KAAK,EAAE;AACX,CAAC,EACD;EACIF,KAAK,EAAE,aAAa;EACpBC,UAAU,EAAE,cAAc;EAC1BC,KAAK,EAAE;AACX,CAAC,EACD;EACIF,KAAK,EAAE,aAAa;EACpBC,UAAU,EAAE,eAAe;EAC3BC,KAAK,EAAE,GAAG;EACVC,UAAU,EAAEC,MAAM,IAAIT,MAAM,CAACS,MAAM,CAACC,GAAG,CAACC,WAAW,CAAC,CAACC,OAAO,CAAC;AACjE,CAAC,CACJ;AAMD,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAqB,CAAC,KAAK;EAC3C,oBACIX,OAAA,CAACL,GAAG;IAACiB,EAAE,EAAE;MAAER,KAAK,EAAE,MAAM;MAAES,MAAM,EAAE;IAAI,CAAE;IAACC,SAAS,EAAC,WAAW;IAAAC,QAAA,eAC1Df,OAAA,CAACJ,QAAQ;MACLoB,IAAI,EAAEL,IAAK;MACXM,OAAO,EAAEhB,MAAO;MAChBiB,QAAQ,EAAEX,GAAG,IAAIA,GAAG,CAACY,EAAG;MACxBC,SAAS,EAAE,EAAG;MACdC,YAAY,EAAE;QACVC,UAAU,EAAE;UACRC,eAAe,EAAE;YACbC,QAAQ,EAAE;UACd;QACJ;MACJ;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACC,EAAA,GAlBInB,QAAQ;AAoBd,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}